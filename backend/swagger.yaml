openapi: 3.0.0
info:
  description: This is the API documentation for project (Re)SourcesRelationnelles
  version: "1.0.0"
  title: API (Re)SourcesRelationnelles
  contact:
    email: quentindumon3524a@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: Gestion compte
    description: Gestion de la cr√©ation, connexion, suppression et modification de compte
  - name: Gestion des ressources
    description: Gestion de la cr√©ation, modification et de la suppression des ressources
paths:
  /api/v1/auth/signup:
    post:
      tags:
        - Gestion compte
      summary: Cr√©ation d'un utilisateur üë®‚Äçüíª
      description: Route permettant d'enregistrer un utilisteur en sp√©cifiant le r√¥le ‚öôÔ∏è‚öôÔ∏è‚öôÔ∏è de la requ√™te üõ£
      operationId: createUser
      responses:
          "201":
              description: Utilisateur cr√©√© ‚úÖ
          "400":
              description: Requ√™te invalide ‚õîÔ∏è
          "500":
              description: Erreur serveur ‚õîÔ∏è
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Utilisateur'
  /api/v1/auth/login:
    post:
      tags:
        - Gestion compte
      summary: Connexion moderateurs / utilisateurs / super administrateurs / administrateur üë®‚Äçüíª
      operationId: loginUsers
      description: Permet de se connecter et de r√©cup√©rer le token de connexion dans la r√©ponse üëå
      parameters:
        - in: query
          name: Email
          description: Email de l'utilisateur
          required: true
          schema:
            type: string
        - in: query
          name: Password
          description: Mot de passe de l'utilisateur
          required: true
          schema:
            type: string
            minimum: 10
      responses:
        '200':
          description: Op√©ration r√©ussite ‚úÖ
          content:
            application/json:
              schema:
                type: object
                properties:
                    userId:
                        type: string
                    token:
                        type: string
        "401":
          description: Paire identifiant/mot de passe inccorrecte üõë
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
  /api/v1/ressources:
    post:
      tags:
        - Gestion des ressources
      summary: Ajout d'une nouvelle ressource
      operationId: addRessource
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ressource'
      responses:
        "201":
          description: Ressource cr√©√©e ‚úÖ
        "400":
          description: Requ√™te invalide ‚ùå
        "401":
          description: Acc√®s refus√© üõë
    
    get:
      tags:
        - Gestion des ressources
      summary: R√©cup√©ration de toutes les ressources
      operationId: getAllRessources
      responses:
        "200":
          description: Op√©ration r√©ussie ‚úÖ
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ressource'
        "400":
          description: Requ√™te invalide ‚ùå
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Ressource:
      type: object
      required:
        - title
        - content
        - category
        - realationType
      properties:
        title:
          type: string
          example: La sant√© mentale
        content:
          type: string
          example: La sant√© mentale est un enjeu de sant√© publique
        category:
          type: array
          items:
            type: string
          example: ["sant√©", "bien-√™tre", "psychologie"]
        relationType:
          type: string
        media:
          type: array
          items:
            type: string
          example: ["image1.jpg", "video1.mp4"]
    Utilisateur:
        type: object
        required:
          - pseudonyme
          - email
          - mdp
        properties:
          pseudonyme:
            type: string
            example: "JohnDoe"
          email:
            type: string
            format: email
            example: "johndoe@example.com"
          mdp:
            type: string
            format: password
            example: "$2a$12$EIXR5dDf.aKDgK0TV5rR7u0xL8FlpO/Y/fpFQ.wb.E5HNt4cAc0yO"
          role:
            type: string
            enum:
              - super-administrateur
              - administrateur
              - moderateur
              - utilisateur
            example: "utilisateur"
    Commentaire:
      type: object
      required:
        - authorId
        - contenu
        - auteur
        - ressourceId
      properties:
        contenu:
          type: string
          example: "Ce commentaire est tr√®s pertinent concernant la ressource."
        authorId:
          type: string
          format: uuid
          description: "ID de l'utilisateur auteur du commentaire"
          example: "987e6543-e21b-43d3-a876-426617890000"
        ressourceId:
          type: string
          format: uuid
          description: "ID de la ressource √† laquelle ce commentaire est associ√©"
          example: "550e8400-e29b-41d4-a716-446655440000"
    Statistique:
      type: object
      required:
        - ressourcesId
      properties:
        ressourcesId:
          type: string
          format: uuid
          description: "ID de la ressource √† laquelle ces statistiques sont associ√©es"
          example: "550e8400-e29b-41d4-a716-446655440000"
        totalShare:
          type: integer
          description: "Nombre de fois que la ressource a √©t√© partag√©e"
          example: 120
        totalComents:
          type: integer
          description: "Nombre de commentaires associ√©s √† la ressource"
          example: 45